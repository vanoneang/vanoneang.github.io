(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{516:function(n,t,a){"use strict";a.r(t);var s=a(10),v=Object(s.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[n._v("#")]),n._v(" Nginx")]),n._v(" "),t("h2",{attrs:{id:"配置虚拟域名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置虚拟域名"}},[n._v("#")]),n._v(" 配置虚拟域名")]),n._v(" "),t("ol",[t("li",[n._v("在 "),t("code",[n._v("nginx.conf")]),n._v(" 中添加:")])]),n._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[n._v("include vhost/*.conf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[n._v("创建 "),t("code",[n._v("vhost")]),n._v(" 文件夹及虚拟域名conf文件")])]),n._v(" "),t("h2",{attrs:{id:"基础命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础命令"}},[n._v("#")]),n._v(" 基础命令")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("nginx // 启动\n\nnginx -s stop // 停止\n\nnginx -s reload // 重启\n\nnginx -t // 检查配置状态\n\n/opt/local/var/log/nginx  // 日志\n")])])]),t("h2",{attrs:{id:"nginx特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx特性"}},[n._v("#")]),n._v(" Nginx特性")]),n._v(" "),t("ul",[t("li",[n._v("IO多路复用epoll，并行的方式来完成IO流请求")])]),n._v(" "),t("p",[t("strong",[n._v("什么是IO多路复用？")]),n._v("\n多个描述符的I/O操作都能在一个县城内并发交替地顺序完成，这就叫I/O多路复用，这里的“复用”指的是复用同一个线程。\n"),t("strong",[n._v("什么是epoll模型？")]),n._v("\n1.每当FD就绪，采用系统的回调函数之间将fd放入，效率更高。（类似事件驱动）\n2.最大连接无限制。")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("轻量级web服务，功能模块少，代码模块化")])]),n._v(" "),t("li",[t("p",[n._v("CPU亲和（affinity）")])]),n._v(" "),t("li",[t("p",[n._v("sendfile")])])]),n._v(" "),t("p",[t("strong",[n._v("什么是CPU亲和？")]),n._v(" 是一种把CPU核心和Nginx工作进程绑定方式，把每个worker进行固定在一个cpu上执行，减少切换cpu的cache miss，获得更好的性能。")]),n._v(" "),t("h2",{attrs:{id:"什么是反向代理与负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是反向代理与负载均衡"}},[n._v("#")]),n._v(" "),t("a",{attrs:{href:"https://juejin.im/post/5b01336af265da0b8a67e5c9",target:"_blank",rel:"noopener noreferrer"}},[n._v("什么是反向代理与负载均衡"),t("OutboundLink")],1)]),n._v(" "),t("p",[t("strong",[n._v("什么是反向代理")])]),n._v(" "),t("p",[n._v("当我们有一个服务器集群，并且服务器集群中的每台服务器的内容一样的时候，同样我们要直接从个人电脑访问到服务器集群服务器的时候无法访问，必须通过第三方服务器才能访问集群")]),n._v(" "),t("p",[n._v("这个时候，我们通过第三方服务器访问服务器集群的内容，但是我们并不知道是哪一台服务器提供的内容，此种代理方式称为"),t("code",[n._v("反向代理")])]),n._v(" "),t("p",[t("strong",[n._v("什么是负载均衡")])]),n._v(" "),t("p",[n._v("公司会建立很多的服务器，这些服务器组成了服务器集群，然后，当用户访问网站的时候，先访问一个中间服务器，再让这个中间服务器在服务器集群中选择一个压力较小的服务器，然后将该访问请求引入选择的服务器")]),n._v(" "),t("p",[n._v("所以，用户每次访问，都会保证服务器集群中的每个服务器压力趋于平衡，分担了服务器压力，避免了服务器崩溃的情况")]),n._v(" "),t("p",[n._v("一句话："),t("code",[n._v("nginx会给你分配服务器压力小的去访问")])]),n._v(" "),t("p",[n._v("用户访问网站的时候首先会访问nginx服务器，然后nginx服务器再从服务器集群中选择压力较小的服务器，将该访问请求引向该服务器")]),n._v(" "),t("RightMenu")],1)}),[],!1,null,null,null);t.default=v.exports}}]);