(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{357:function(a,s,t){a.exports=t.p+"assets/img/docker.f9493210.png"},358:function(a,s,t){a.exports=t.p+"assets/img/image.c1e841ae.png"},359:function(a,s,t){a.exports=t.p+"assets/img/container.1c7d3383.png"},360:function(a,s,t){a.exports=t.p+"assets/img/network.72e2d79f.png"},361:function(a,s,t){a.exports=t.p+"assets/img/network1.8a1025c3.png"},513:function(a,s,t){"use strict";t.r(s);var e=t(10),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[a._v("#")]),a._v(" Docker")]),a._v(" "),s("h2",{attrs:{id:"容器和虚拟机的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器和虚拟机的区别"}},[a._v("#")]),a._v(" 容器和虚拟机的区别")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("容器是APP层面的隔离")])]),a._v(" "),s("li",[s("p",[a._v("虚拟化是物理资源层面的隔离")])])]),a._v(" "),s("h2",{attrs:{id:"vagrant"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vagrant"}},[a._v("#")]),a._v(" Vagrant")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("下载 "),s("code",[a._v("VirtualBox && Vagrant")])])]),a._v(" "),s("li",[s("p",[a._v("在一个目录下生成 "),s("code",[a._v("Vagrantfile")]),a._v("，并启动。")])])]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("vagrant init centos/7\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动")]),a._v("\nvagrant up\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 登录")]),a._v("\nvagrant "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ssh")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 状态")]),a._v("\nvagrant status\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 关闭")]),a._v("\nvagrant "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("halt")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除")]),a._v("\nvagrant destroy\n")])])]),s("h2",{attrs:{id:"安装-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker"}},[a._v("#")]),a._v(" 安装 Docker")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://docs.docker.com/install/linux/docker-ce/centos/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://docs.docker.com/install/linux/docker-ce/centos/"),s("OutboundLink")],1)]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl start "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])]),s("h2",{attrs:{id:"docker-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-介绍"}},[a._v("#")]),a._v(" Docker 介绍")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("Docker 提供了一个开发，打包，运行app的平台，把app和底层的 infrastructure 隔离开来。")])]),a._v(" "),s("li",[s("p",[a._v("docker client 与 server（dockerd） 通过 REST API通信，所以可以在同一台机器上，也可以在不同的机器上通过网络来通信。")])])]),a._v(" "),s("img",{attrs:{src:t(357)}}),a._v(" "),s("h2",{attrs:{id:"image-container"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#image-container"}},[a._v("#")]),a._v(" Image & Container")]),a._v(" "),s("img",{attrs:{src:t(358)}}),a._v(" "),s("img",{attrs:{src:t(359)}}),a._v(" "),s("img",{attrs:{src:t(360)}}),a._v(" "),s("img",{attrs:{src:t(361)}}),a._v(" "),s("h2",{attrs:{id:"sh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sh"}},[a._v("#")]),a._v(" sh")]),a._v(" "),s("h3",{attrs:{id:"docker-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-2"}},[a._v("#")]),a._v(" docker")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# image list")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# remove image")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" rmi image-name\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# container list (include stoped c)")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# run container")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run hello-world\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# run container and interactive execution ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" image-name /bin/bash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# list of container id")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" container "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-aq")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Force-remove a running container")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" container-name\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# rm all container")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-aq")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"status=exited"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Remove all stopped containers")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-aq")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# build image")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" build "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" image-name "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果build出现问题，可以采用交互式进入debug问题")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" b9533a95a065 /bin/bash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 端口映射")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":80 image-name \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 后台运行")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" vanoneang/node-hell\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 交互式进入运行的container中")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" aa4869b97116 /bin/bash\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看network")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看某个container的网络详细（上一个命令的 NETWORK ID bridge），拿到IP地址")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network inspect d2b09b5d9aeb\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置container flask-redis的环境变量 REDIS_HOST=redis，如果容器中的程序需要通过读取环境变量的方式来读取配置，这样可以设置不同的环境变量")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--link")]),a._v(" redis "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" flask-redis "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("REDIS_HOST")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("redis vanoneang/flask-redis\n")])])]),s("h3",{attrs:{id:"dockerfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[a._v("#")]),a._v(" Dockerfile")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("FROM scratch "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 制作base image")]),a._v("\nFROM centos  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用base image")]),a._v("\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("LABEL "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("maintainer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"123@qq.com"')]),a._v(" \nLABEL "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("version")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1.0.0"')]),a._v("\nLABEL "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("description")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"帮助信息"')]),a._v("\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("RUN yum update "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 为了避免出现多个层（layer）尽量把命令写在一行")]),a._v("\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("WORKDIR /test "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果没有会自动创建test目录")]),a._v("\nWORKDIR demo\nRUN "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("pwd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 输出结果应该是 /test/demo 避免使用 RUN cd")]),a._v("\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("ADD test.tar.gz /  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 添加到根目录并解压")]),a._v("\n\nWORKDIR /root\nADD hello.js test/ "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# /root/test/hello.js")]),a._v("\n\nWORKDIR /root\nCOPY hello.js test/ "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# /root/test/hello.js COPY 比 ADD 优先使用，")]),a._v("\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("ENV MYSQL_VERSION "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.6")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置常量")]),a._v("\nRUN "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" mysql-server"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MYSQL_VERSION}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" /var/lib/apt/lists/* "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 引用常量")]),a._v("\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("ADD test.sh /root/home\nRNTRYPOINT "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"test.sh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 永远会执行")]),a._v("\n\nCMD "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello world"')]),a._v("\nCMD "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello docker"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只执行最后一个")]),a._v("\n")])])]),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("FROM ubuntu\nRUN "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" update "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" stress\nENTRYPOINT "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/usr/bin/stress"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\nCMD "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通过命令行输入参数，上一行的ENTRYPOINT是命令")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" 打包后的镜像 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),s("h2",{attrs:{id:"端口映射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#端口映射"}},[a._v("#")]),a._v(" 端口映射")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将container的80端口映射到服务器的80端口")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" web "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(":80 nginx\n")])])]),s("RightMenu")],1)}),[],!1,null,null,null);s.default=n.exports}}]);