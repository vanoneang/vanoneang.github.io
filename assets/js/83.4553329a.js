(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{537:function(t,e,a){"use strict";a.r(e);var r=a(10),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"interview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#interview"}},[t._v("#")]),t._v(" interview")]),t._v(" "),e("h2",{attrs:{id:"let-vs-var"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#let-vs-var"}},[t._v("#")]),t._v(" let VS var")]),t._v(" "),e("ul",[e("li",[t._v('"var" is there in JS from the beginning / "let" was introduced in ES2015/ES6')]),t._v(" "),e("li",[t._v('"let" has block scope / "var" has function scope')]),t._v(" "),e("li",[t._v('"var" get hoisted')])]),t._v(" "),e("h2",{attrs:{id:"vs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vs"}},[t._v("#")]),t._v(" == vs ===")]),t._v(" "),e("ul",[e("li",[t._v("both are comparison operators")]),t._v(" "),e("li",[t._v('=== compares "value" and "type"')])]),t._v(" "),e("h2",{attrs:{id:"function-declaration-function-expression"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#function-declaration-function-expression"}},[t._v("#")]),t._v(" function declaration & function expression")])])}),[],!1,null,null,null);e.default=s.exports}}]);