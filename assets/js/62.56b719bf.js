(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{495:function(e,t,a){"use strict";a.r(t);var o=a(10),i=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"dealing-with-legacy-code-and-technical-debt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dealing-with-legacy-code-and-technical-debt"}},[e._v("#")]),e._v(" Dealing with Legacy Code and Technical Debt")]),e._v(" "),t("p",[e._v("Legacy code and technical debt, are two topics that go hand in hand.")]),e._v(" "),t("h2",{attrs:{id:"definitions-of-legacy-code-and-technical-debt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#definitions-of-legacy-code-and-technical-debt"}},[e._v("#")]),e._v(" Definitions of Legacy Code and Technical Debt")]),e._v(" "),t("p",[e._v("When you mention legacy code, many people assume that you're talking about really old code that was created decades ago, but that's not always the case.")]),e._v(" "),t("p",[e._v("There are many different definitions of legacy code, with the most popular one being by Michael Feathers, which is simply that "),t("strong",[e._v("legacy code is code without tests")]),e._v(".")]),e._v(" "),t("p",[e._v("There are also said that legacy code is code without sufficient communication artifacts to explain its intent. "),t("em",[e._v("And while tests are excellent communication artifacts, there are other communication artifacts, such as written documentation")]),e._v(", and guess what? The "),t("em",[e._v("code itself is also a communication artifact")]),e._v(".")]),e._v(" "),t("ul",[t("li",[e._v("Legacy Code\n"),t("ul",[t("li",[e._v("Usually older code, but not always")]),e._v(" "),t("li",[e._v("Code without sufficient communication artifacts to explain its intent")]),e._v(" "),t("li",[e._v("Tests are a very effective communication artifact")]),e._v(" "),t("li",[e._v("So are other forms of documentation, including readable code")])])])]),e._v(" "),t("p",[e._v("The Technical Debt is used to explain the impact of choosing to cut corners instead of following best practices.")]),e._v(" "),t("p",[e._v("If you don't pay down the debt, the interest will continue to accumulate and soon, all of your efforts will be focused on making interest payments and very little will go towards paying down the principal.")]),e._v(" "),t("h2",{attrs:{id:"review-the-technical-debt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#review-the-technical-debt"}},[e._v("#")]),e._v(" Review the Technical Debt")]),e._v(" "),t("p",[e._v("Here are some common technical debt challenges:")]),e._v(" "),t("ol",[t("li",[e._v("Limited familiarity with all(or most) of the code")]),e._v(" "),t("li",[e._v("Not sure where to start")]),e._v(" "),t("li",[e._v("No one who can answer questions")])]),e._v(" "),t("p",[e._v("To handle this, let's learn how to build and run the project first. Usually, try to find resources from:")]),e._v(" "),t("ul",[t("li",[e._v("README and other text files")]),e._v(" "),t("li",[e._v("Project wiki")]),e._v(" "),t("li",[e._v("Issue tracker")])]),e._v(" "),t("p",[e._v("You may find that:")]),e._v(" "),t("ul",[t("li",[e._v("Surrounded by past decisions")]),e._v(" "),t("li",[e._v("Some code could be better")]),e._v(" "),t("li",[e._v("Some code will be confusing")])]),e._v(" "),t("p",[e._v("And as you move through the historical artifacts that have been left behind for your discovery, it's important to not judge the people who used to work on the project. When you inherit an older code base, "),t("strong",[e._v("it's important to realize that it's now yours")]),e._v(". You have the power to make the code better. The project is yours now, own it.")]),e._v(" "),t("h2",{attrs:{id:"handling-the-technical-debt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#handling-the-technical-debt"}},[e._v("#")]),e._v(" Handling the Technical Debt")]),e._v(" "),t("p",[e._v("Automated tests are vitally important for making improvements to our code basis. They act as a welcomed safety net, allowing us to make the changes that are needed to reduce technical debt without having to worry as much about unintended consequences.")]),e._v(" "),t("p",[e._v("First, Let's evaluate the Automated Test Suite. Here are some things we can do:")]),e._v(" "),t("ul",[t("li",[e._v("Add a test suite, if one is missing")]),e._v(" "),t("li",[e._v("Discover how to run the tests")]),e._v(" "),t("li",[e._v("Address each failing test")]),e._v(" "),t("li",[e._v("Increase coverage as needed")])]),e._v(" "),t("p",[e._v("Now, Let's pay down the technical debt. First, remove noise and distractions:")]),e._v(" "),t("ul",[t("li",[e._v("Commented-out code should just be deleted as soon as you see it.")]),e._v(" "),t("li",[e._v("Use IDE to reformat poorly formatted code.\nRemove any distractions you find.")])]),e._v(" "),t("p",[e._v("Technical debt is not something that you just address once and stays gone forever. Instead, it's a lot like weeding a garden. After you take the time to remove all of the weeds in your garden, they will not stay gone forever. The weeds will come back. Slowly at first, but then before you know it, your garden will be overrun again. The best way to address this is to spend a little bit of time weeding your garden every day")])])}),[],!1,null,null,null);t.default=i.exports}}]);